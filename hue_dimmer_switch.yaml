blueprint:
  name: Philips Hue Dimmer switch [tg]
  description: "Automation for Hue Dimmer Switch Remote"
  domain: automation
  input:
    dimmer_switch:
      name: Dimmer Switch (Remote Control)
      selector:
        device:
          filter:
          - integration: hue
            model: RWL021
          - integration: hue
            model: "Hue dimmer switch (RWL021)"
    btn1_press:
      name: Button 1 (ON) press
      description: Action to run when button 1 is pressed
      default: []
      selector:
        action: {}
    btn1_hold:
      name: Button 1 (ON) hold
      description: Action to run when button 1 is hold down
      default: []
      selector:
        action: {}
    btn2_press:
      name: Button 2 (INCREASE) press
      description: Action to run when button 2 is pressed
      default: []
      selector:
        action: {}
    btn2_hold:
      name: Button 2 (INCREASE) hold
      description: Action to run when button 2 is hold down
      default: []
      selector:
        action: {}
    btn3_press:
      name: Button 3 (DECREASE) press
      description: Action to run when button 3 is pressed
      default: []
      selector:
        action: {}
    btn3_hold:
      name: Button 3 (DECREASE) hold
      description: Action to run when button 3 is hold down
      default: []
      selector:
        action: {}
    btn4_press:
      name: Button 4 (OFF) press
      description: Action to run when button 4 is pressed
      default: []
      selector:
        action: {}
    btn4_hold:
      name: Button 4 (OFF) hold
      description: Action to run when button 4 is hold down
      default: []
      selector:
        action: {}

trigger:
  - platform: event
    event_type: hue_event
    event_data:
      device_id: !input dimmer_switch

action:
  - variables:
      # interaction_id: '{{ trigger.event.data.id }}'
      # interaction_deviceid: '{{ trigger.event.data.device_id }}'
      interaction_type: '{{ trigger.event.data.type }}'
      interaction_button: '{{ trigger.event.data.subtype }}'
  - service: notify.mobile_app
    data:
      message: 'Test DeviceID: {{ interaction_deviceid }} TYPE: {{ interaction_type }} BUTTON#: {{ interaction_button }}'
  - choose:
    - conditions:
      - '{{ interaction_button == 1 and interaction_type == "short_release" }}'
      sequence: !input btn1_press
    - conditions:
      - '{{ interaction_button == 1 and interaction_type == "long_release" }}'
      sequence: !input btn1_hold
    - conditions:
      - '{{ interaction_button == 2 and interaction_type == "short_release" }}'
      sequence: !input btn2_press
    - conditions:
      - '{{ interaction_button == 2 and interaction_type == "long_release" }}'
      sequence: !input btn2_hold
    - conditions:
      - '{{ interaction_button == 3 and interaction_type == "short_release" }}'
      sequence: !input btn3_press
    - conditions:
      - '{{ interaction_button == 3 and interaction_type == "long_release" }}'
      sequence: !input btn3_hold
    - conditions:
      - '{{ interaction_button == 4 and interaction_type == "short_release" }}'
      sequence: !input btn4_press
    - conditions:
      - '{{ interaction_button == 4 and interaction_type == "long_release" }}'
      sequence: !input btn4_hold